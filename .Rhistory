knitr::opts_chunk$set(echo = TRUE)
library(seqinr)
#library(bio3d)
library(plotly)
library(ggplot2)
library(dplyr)
library(ggfortify)
library(e1071)
library(caTools)
# ?rcdk
library(protr)
extractCTDC(EC_2[[1]])
extractCTDC("AAAAAAATTTTTTTZZZ")
extractCTDC("AAAAAAATTTTTTT")
extractCTDT("AAAAAAATTTTTTT")
extractCTDCClass("AAAAAAATTTTTTT")
extractCTDD("AAAAAAATTTTTTT")
help(protr)
ids <- c("P00750", "P00751", "P00752")
ids <- c("P00750", "P00751", "P00752")
prots <- getUniProt(ids)
prots
prots |> extractAAC()
class(prots)
lapply(prots, extractAAC)
lapply(prots, protcheck)
prots[[lapply(prots, protcheck)]]
which(prots==1)
prots[[which(lapply(prots, protcheck))]]
which(lapply(prots, protcheck))
which(lapply(prots, protcheck),TRUE)
which(lapply(prots, protcheck)==TRUE)
prots[[which(lapply(prots, protcheck)==TRUE)]]
subset(prots,which(lapply(prots, protcheck)==TRUE))
which(lapply(prots, protcheck)==TRUE)
subset(prots,lapply(prots, protcheck))
lapply(prots, protcheck)
subset(prots,unlist(lapply(prots, protcheck)))
prots <- getUniProt(ids)
prots <- removeGaps(prots)
prots
prots <- subset(prots,unlist(lapply(prots, protcheck))) # remove problematic sequences
prots# remove problematic sequences
prots <- lapply(prots,extractAAC )
prots
knitr::opts_chunk$set(echo = TRUE)
library(seqinr)
#library(bio3d)
library(plotly)
library(ggplot2)
library(dplyr)
library(ggfortify)
library(e1071)
library(caTools)
# ?rcdk
SeqFastaAA_list_to_matrix <- function(SeqFastaAA_list) {
statslist<-empty.dump()
## get AA-Composition list from fasta:
for(i in 1:length(SeqFastaAA_list)){
statslist[[i]]<-AAstat(SeqFastaAA_list[[i]],plot = FALSE)$Compo
}
## Set names:
names(statslist)<-names(SeqFastaAA_list)
## transform to matrix:
AA_matrix<-do.call(rbind,statslist)
## use three letter annotation:
colnames(AA_matrix)[-1]<-aaa(colnames(AA_matrix)[-1])
return(AA_matrix)
}
comp_matrix<-readRDS("data/comp_matrix_HSapiens.rds")
comp_matrix$EC<-as.factor(comp_matrix$EC)
head(comp_matrix)
### Plot number of enzymes per group
comp_matrix %>% group_by(EC) %>% tally() %>% ggplot(aes(EC,n))+geom_col()
#### Plot length of sequence per group
AA_len<- cbind("EC"=comp_matrix$EC,"nAA"=rowSums(comp_matrix[1:21]))
boxplot(nAA ~ EC,data = AA_len)
## -> big outlier in EC 2
#### PCR
comp_matrix %>% select(Ala:Tyr) %>%
prcomp(scale.=TRUE,center=TRUE) %>% autoplot(data = comp_matrix,colour="EC") %>%
ggplotly()  ## EC 2?!
comp_matrix %>% filter(row.names(comp_matrix) %in% c("EC 2.sp|Q8WZ42|TITIN_HUMAN"))
# just a giant enzyme....... -----
list.files()
list.files("EDPred")
list.files("./EDPred")
list.dirs("./EDPred")
list.dirs()
list.dirs("./ECPred",recursive = TRUE)
list.dirs("./ECPred/ECPred\ Datasets",recursive = TRUE)
list.dirs("./ECPred/ECPred\ Datasets",recursive = TRUE,full.names = F)
hydrolases_neg<-read.table("./ECPred/ECPred Datasets/EC_MainClass_NegativeTrain/Hydrolases_Negative_Train.txt")
hydrolases_neg<-read.table("./ECPred/ECPred Datasets/EC_MainClass_NegativeTrain/Hydrolases_Negative_Train.txt",header = TRUE)
filenames<-(c(paste0(c("Hydrolases","Isomerases","Ligases","Oxidoreductases","Transferases"),"_Negative_Train.txt"))
filenames<-c(paste0(c("Hydrolases","Isomerases","Ligases","Oxidoreductases","Transferases"),"_Negative_Train.txt"))
Enzymes<-c("Hydrolases","Isomerases","Ligases","Oxidoreductases","Transferases")
filenames<-paste0(Enzymes,"_Negative_Train.txt")
filenames
scan(filenames[1],character(),quote="")
## negatives
setwd("./ECPred/ECPred Datasets/EC_MainClass_NegativeTrain")
scan(filenames[1],character(),quote="")
scan(filenames[1],character(),quote="")
## negatives
setwd("./ECPred/ECPred Datasets/EC_MainClass_NegativeTrain/")
getwd()
## negatives
setwd("./ECPred/ECPred Datasets/EC_MainClass_NegativeTrain")
filenames<-paste0(Enzymes,"_Negative_Train.txt")
scan(filenames[1],character(),quote="")
filenames[1]
hydrolases_neg<-read.table("Hydrolases_Negative_Train.txt",header = TRUE)
filenames[1]
scan(paste(filenames[1]),character(),quote="")
getwd()
## negatives
setwd("./ECPred/ECPred Datasets/EC_MainClass_NegativeTrain")
scan(filenames[1],character(),quote="")
hydrolases_neg<-read.table("Hydrolases_Negative_Train.txt",header = TRUE)
hydrolases_neg<-read.table("./ECPred/ECPred Datasets/EC_MainClass_NegativeTrain/Hydrolases_Negative_Train.txt",header = TRUE)
scan(paste0(path,paste0filenames[1]),character(),quote="")
## negatives
path ="./ECPred/ECPred Datasets/EC_MainClass_NegativeTrain"
scan(paste0(path,paste0filenames[1]),character(),quote="")
scan(paste0(path,filenames[1]),character(),quote="")
paste0(path,filenames[1])
## negatives
path ="./ECPred/ECPred Datasets/EC_MainClass_NegativeTrain/"
scan(paste0(path,filenames[1]),character(),quote="")
filenames[-3]
Hydrolases_neg_train<-scan(paste0(path,filenames[1]),character(),quote="")
Hydrolases_neg_train[-3]
Hydrolases_neg_train
Hydrolases_neg_train[-1:3]
Hydrolases_neg_train[-c(1:3)]
Hydrolases_neg_train<-Hydrolases_neg_train[-c(1:3)]
print(Sys.time())
a<-print(Sys.time())
print(Sys.time()-a)
library(protr)
a<-Sys.time()
ids <- Hydrolases_neg_train[1:100]
prots <- getUniProt(ids)
prots <- removeGaps(prots)
prots <- subset(prots,unlist(lapply(prots, protcheck)))
prots# remove problematic sequences
prots <- lapply(prots,extractAAC ) #calcualte AAC
print(Sys.time()-a)
length(Hydrolases_neg_train)
144*2
144*2/60
reticulate::repl_python()
